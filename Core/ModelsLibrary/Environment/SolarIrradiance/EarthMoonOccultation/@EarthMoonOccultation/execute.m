function [sun_visibility_fraction] = execute(position_BI_I__m, ...
                                               sun_position_SI_I__m, ...
                                               moon_position_MI_I__m, ...
                                               ParametersEarthMoonOccultation)
% execute - Get visibility fraction of the Sun due to occultation by Earth or the Moon
%
% [sun_visibility_fraction] = execute(position_BI_I__m, ...
%                                        sun_position_SI_I__m, ...
%                                        moon_position_MI_I__m, ...
%                                        ParametersEarthMoonOccultation)%
%   Inputs:
%   position_BI_I__m: 3x1 satellite position in inertial coordinates
%   sun_position_SI_I__m: 3x1 sun position in inertial coordinates
%   moon_position_MI_I__m: 3x1 moon position in inertial coordinates
%   ParametersEarthMoonOccultation: class parameter structure with body radii
%
%   Outputs:
%   sun_visibility_fraction: fraction of visible sun area
%

%% Get visibilites of sun due to occultation by Earth or the Moon

sunVis_Earth ...
    = smu.geometry.conicalOccultation(position_BI_I__m,...
                                        sun_position_SI_I__m,[0;0;0],...
                                        ParametersEarthMoonOccultation.sun_radius__m,...
                                        ParametersEarthMoonOccultation.earth_radius__m);

sunVis_Moon...
    = smu.geometry.conicalOccultation(position_BI_I__m,...
                                        sun_position_SI_I__m,moon_position_MI_I__m,...
                                        ParametersEarthMoonOccultation.sun_radius__m,...
                                        ParametersEarthMoonOccultation.moon_radius__m);

% Take lower of both visibilites - approximation
sun_visibility_fraction = min(sunVis_Earth,sunVis_Moon);


end