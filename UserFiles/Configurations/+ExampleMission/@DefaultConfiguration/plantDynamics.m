function [PlantFeedthrough, ...
            LogPlantDynamics, ...    
            PlantStatesDerivatives] ...
            = plantDynamics(PlantFeedthrough, ...
                                LogPlantDynamics, ...
                                PlantStatesDerivatives, ...
                                EnvironmentConditions, ...
                                ActuatorsOutputs, ...
                                PlantStates, ...
                                ParametersPlant)

%% Abbreviations

% States
velocity_BI_I__m_per_s = PlantStates.RigidBody.velocity_BI_I__m_per_s;
attitude_quaternion_BI = PlantStates.RigidBody.attitude_quaternion_BI;
angular_velocity_BI_B__rad_per_s = PlantStates.RigidBody.angular_velocity_BI_B__rad_per_s;
rw_angular_velocities__rad_per_s = PlantStates.ReactionWheels.angular_velocities__rad_per_s;

% Environment Conditions
gravitational_acceleration_I__m_per_s2 = EnvironmentConditions.EarthGravitationalField.gravitational_acceleration_I__m_per_s2;
atmosphere_mass_density__kg_per_m3 = EnvironmentConditions.EarthAtmosphere.mass_density__kg_per_m3;
atmosphere_number_density__1_per_m3 = EnvironmentConditions.EarthAtmosphere.number_density__1_per_m3;
atmosphere_temperature__K = EnvironmentConditions.EarthAtmosphere.temperature__K;
magnetic_field_I__T = EnvironmentConditions.EarthMagneticField.magnetic_field_I__T;

% Actuators
magnetic_dipole_moment_B__A_m2 = ActuatorsOutputs.MagneticTorquers.magnetic_dipole_moment_B__A_m2;
rw_torque_commands__N_m = ActuatorsOutputs.ReactionWheels.torque_commands__N_m;

% Parameters
mass_kg = ParametersPlant.mass_kg;
inertia_B_B__kg_m2 = ParametersPlant.inertia_B_B__kg_m2;

%% Forces and Torques

% Gravity
gravitational_force_I__N = PointMassGravity.execute(gravitational_acceleration_I__m_per_s2, ...
                                                                ParametersPlant.PointMassGravity);

% Aerodynamics
[aerodynamic_force_B__N, aerodynamic_torque_B__Nm] ...
    = SimplifiedVleoAerodynamics.execute(attitude_quaternion_BI, ...
                                            angular_velocity_BI_B__rad_per_s, ...
                                            velocity_BI_I__m_per_s, ...
                                            zeros(3,1), ...
                                            atmosphere_mass_density__kg_per_m3, ...
                                            atmosphere_number_density__1_per_m3, ...
                                            atmosphere_temperature__K, ...
                                            zeros(5,1), ...
                                            ParametersPlant.SimplifiedVleoAerodynamics);
aerodynamic_force_I__N = smu.unitQuat.att.transformVector(smu.unitQuat.invert(attitude_quaternion_BI), aerodynamic_force_B__N);

% Magnetics
magnetic_field_B__T = smu.unitQuat.att.transformVector(attitude_quaternion_BI, magnetic_field_I__T);
magnetic_torque_B__N_m = MagneticDipoleTorque.execute(magnetic_dipole_moment_B__A_m2, ...
                                                        magnetic_field_B__T);

% Reaction Wheel Array
[rw_angular_velocities_derivative__rad_per_s2, ...
    reaction_torque_B__N_m, ...
    gyroscopic_torque_B__N_m] ...
    = RateLimitedReactionWheels.execute(rw_torque_commands__N_m, ...
                                        angular_velocity_BI_B__rad_per_s, ...
                                        rw_angular_velocities__rad_per_s, ...
                                        ParametersPlant.RateLimitedReactionWheels);

%% Sum forces and torques
net_force_I__N = gravitational_force_I__N + aerodynamic_force_I__N;
net_torque_B__N_m = aerodynamic_torque_B__Nm + magnetic_torque_B__N_m + reaction_torque_B__N_m + gyroscopic_torque_B__N_m;

%% Mechanics
% Rigid Body
[position_derivative_BI_I__m_per_s, ...
    velocity_derivative_BI_I__m_per_s2, ...
    attitude_quaternion_derivative__1_per_s, ...
    angular_velocity_derivative_BI_B__rad_per_s2] ...
    = RigidBodyMechanics.execute(net_force_I__N, ...
                                    net_torque_B__N_m, ...
                                    velocity_BI_I__m_per_s, ...
                                    attitude_quaternion_BI, ...
                                    angular_velocity_BI_B__rad_per_s, ...
                                    ParametersPlant.RigidBodyMechanics);

%% Feedthrough Output
PlantFeedthrough.RigidBodyAccelerations.acceleration_BI_I__m_per_s2 = velocity_derivative_BI_I__m_per_s2;
PlantFeedthrough.RigidBodyAccelerations.rotational_acceleration_BI_B__rad_per_s2 = angular_velocity_derivative_BI_B__rad_per_s2;

%% States Derivatives
PlantStatesDerivatives.RigidBody.position_BI_I__m = position_derivative_BI_I__m_per_s;
PlantStatesDerivatives.RigidBody.velocity_BI_I__m_per_s = velocity_derivative_BI_I__m_per_s2;
PlantStatesDerivatives.RigidBody.attitude_quaternion_BI = attitude_quaternion_derivative__1_per_s;
PlantStatesDerivatives.RigidBody.angular_velocity_BI_B__rad_per_s = angular_velocity_derivative_BI_B__rad_per_s2;
PlantStatesDerivatives.ReactionWheels.angular_velocities__rad_per_s = rw_angular_velocities_derivative__rad_per_s2;

%% Log relevant data
LogPlantDynamics.PlantFeedthrough = PlantFeedthrough;
LogPlantDynamics.PlantStatesDerivatives = PlantStatesDerivatives;
LogPlantDynamics.PlantStates = PlantStates;
LogPlantDynamics.Forces.net_force_I__N = net_force_I__N;
LogPlantDynamics.Forces.gravitational_force_I__N = gravitational_force_I__N;
LogPlantDynamics.Forces.aerodynamic_force_B__N = aerodynamic_force_B__N;
LogPlantDynamics.Torques.net_torque_B__N_m = net_torque_B__N_m;
LogPlantDynamics.Torques.aerodynamic_torque_B__Nm = aerodynamic_torque_B__Nm;
LogPlantDynamics.Torques.magnetic_torque_B__N_m = magnetic_torque_B__N_m;
LogPlantDynamics.Torques.reaction_torque_B__N_m = reaction_torque_B__N_m;
LogPlantDynamics.Torques.gyroscopic_torque_B__N_m = gyroscopic_torque_B__N_m;

end
